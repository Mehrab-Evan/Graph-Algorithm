/*================================================
	Bismillahir Rahmaneer Rahim
	Nahmaduhu Wa Nusalli Ala Rasoolihii Kareem Amma 'Baad
	Astagfirullahi Rabbi Minkulli Zambiu Wa Atub hi ilayhi 
	La haula wala ku ata illa billahi 'Alium 'Azim
	Rabbi zidni  'Ilmah
==================================================*/

#include<bits/stdc++.h>
#define ll long long
using namespace std;

bool visited[6];

vector <int> graph[6];

void show_graph(vector <int> g[], int size)
{
	for(int i=0; i<size; i++)
	{
		cout << "Node "  << i << " : -> ";
		for(int j=0; j<g[i].size(); j++)
		{
			cout << g[i][j] << " ";
		}
		cout << endl;
	}
}
void dfs(int source_node)
{
	visited[source_node] = 1;
	for(int i=0; i<graph[source_node].size(); i++)
	{
		int next_target = graph[source_node][i];
		if(visited[next_target] == 0) dfs(next_target);
	}
}
int main()
{
	#ifndef ONLINE_JUDGE
	freopen("C:/Users/Administrator/Desktop/input.txt", "r", stdin);
	freopen("C:/Users/Administrator/Desktop/output.txt", "w", stdout);
	#endif
	int node, edge;
	cin >> node >> edge;
	for(int i=0; i<edge; i++)
	{
		int x, y;
		cin >> x >> y;
		graph[x].push_back(y);
		graph[y].push_back(x);
	}
	show_graph(graph, node);
	dfs(0);
	int count = 1;
	for(int i=0; i<node; i++)
	{
		if(visited[i] == 0)
		{
			cout << i << " th node is not visited" << endl;
			count ++;
			i--;
			dfs(i+1);
		}
		else cout << i << " th node VISITED" << endl;
	}
	cout << "DFS is called for " << count << " times" << endl;
	return 0;

}
